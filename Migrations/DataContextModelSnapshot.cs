// <auto-generated />
using System;
using BairroConnectAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BairroConnectAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BairroConnectAPI.Models.Categoria", b =>
                {
                    b.Property<int>("idCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCategoria"));

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("nomeCategoria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("idCategoria");

                    b.ToTable("TB_CATEGORIA", (string)null);

                    b.HasData(
                        new
                        {
                            idCategoria = 1,
                            descricao = "Atividades físicas e competições recreativas.",
                            nomeCategoria = "Esportivo"
                        },
                        new
                        {
                            idCategoria = 2,
                            descricao = "Diversão e lazer para todos os gostos.",
                            nomeCategoria = "Entreterimento"
                        },
                        new
                        {
                            idCategoria = 3,
                            descricao = "Exploração da arte, história e tradições.",
                            nomeCategoria = "Cultaral"
                        },
                        new
                        {
                            idCategoria = 4,
                            descricao = "Eventos voltados para negócios.",
                            nomeCategoria = "Corporativo"
                        },
                        new
                        {
                            idCategoria = 5,
                            descricao = "Práticas e celebrações voltadas para a religião.",
                            nomeCategoria = "Religioso"
                        },
                        new
                        {
                            idCategoria = 7,
                            descricao = "Eventos voltados para educação",
                            nomeCategoria = "Educacional"
                        },
                        new
                        {
                            idCategoria = 8,
                            descricao = "Eventos relacionados a organizações e instituições.",
                            nomeCategoria = "Institucional"
                        });
                });

            modelBuilder.Entity("BairroConnectAPI.Models.Equipe", b =>
                {
                    b.Property<int>("SelecaoEquipe")
                        .HasColumnType("int");

                    b.Property<int>("idEvento")
                        .HasColumnType("int");

                    b.Property<string>("respoEquipe")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("tamanhoEquipe")
                        .HasColumnType("int");

                    b.HasIndex("idEvento")
                        .IsUnique();

                    b.ToTable("TB_EQUIPE", (string)null);
                });

            modelBuilder.Entity("BairroConnectAPI.Models.Evento", b =>
                {
                    b.Property<int>("idEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEvento"));

                    b.Property<DateTime>("dataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("horaFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("horaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("idCategoria")
                        .HasColumnType("int");

                    b.Property<int>("idOrganizador")
                        .HasColumnType("int");

                    b.Property<int>("limiteParticipantes")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("valorIngresso")
                        .HasColumnType("int");

                    b.HasKey("idEvento");

                    b.HasIndex("idCategoria")
                        .IsUnique();

                    b.HasIndex("idOrganizador")
                        .IsUnique();

                    b.ToTable("TB_EVENTO", (string)null);
                });

            modelBuilder.Entity("BairroConnectAPI.Models.EventoComentario", b =>
                {
                    b.Property<double>("avaliacao")
                        .HasColumnType("float");

                    b.Property<string>("comentario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("idEvento")
                        .HasColumnType("int");

                    b.Property<int>("idMunicipe")
                        .HasColumnType("int");

                    b.HasIndex("idEvento")
                        .IsUnique();

                    b.ToTable("TB_EVENTOCOMENTARIO", (string)null);
                });

            modelBuilder.Entity("BairroConnectAPI.Models.EventoEndereco", b =>
                {
                    b.Property<string>("CEPEndereco")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UFEndereco")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("bairroEndereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("cidadeEndereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("endereco")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("idEvento")
                        .HasColumnType("int");

                    b.Property<string>("nroEndereco")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasIndex("idEvento")
                        .IsUnique();

                    b.ToTable("TB_EVENTOENDERECO", (string)null);
                });

            modelBuilder.Entity("BairroConnectAPI.Models.EventoMunicipe", b =>
                {
                    b.Property<int>("idEventoMunicipe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEventoMunicipe"));

                    b.Property<DateTime>("horaFim")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("horaInicio")
                        .HasColumnType("datetime");

                    b.Property<int>("idEvento")
                        .HasColumnType("int");

                    b.Property<int>("idMunicipe")
                        .HasColumnType("int");

                    b.HasKey("idEventoMunicipe");

                    b.ToTable("TB_EVENTOMUNICIPE", (string)null);
                });

            modelBuilder.Entity("BairroConnectAPI.Models.EventoParticipante", b =>
                {
                    b.Property<DateTime>("horaParticipacao")
                        .HasColumnType("datetime");

                    b.Property<int>("idEvento")
                        .HasColumnType("int");

                    b.Property<int>("limiteParticipantesHora")
                        .HasColumnType("int");

                    b.HasIndex("idEvento")
                        .IsUnique();

                    b.ToTable("TB_EVENTOPARTICIPANTE", (string)null);
                });

            modelBuilder.Entity("BairroConnectAPI.Models.Logins", b =>
                {
                    b.Property<int>("idPessoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPessoa"));

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varbinary(255)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varbinary(255)");

                    b.Property<DateTime>("dataNasc")
                        .HasColumnType("date");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("sobrenome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("tipoConta")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Municipe");

                    b.HasKey("idPessoa");

                    b.ToTable("TB_LOGINS", (string)null);

                    b.HasData(
                        new
                        {
                            idPessoa = 1,
                            PasswordHash = new byte[] { 214, 26, 66, 10, 128, 175, 6, 39, 163, 37, 129, 230, 36, 160, 136, 230, 18, 155, 109, 90, 0, 216, 239, 40, 23, 8, 168, 216, 205, 159, 149, 230, 226, 235, 220, 114, 0, 137, 44, 2, 27, 242, 244, 142, 114, 147, 38, 178, 103, 91, 196, 76, 14, 15, 146, 208, 89, 212, 3, 157, 115, 168, 173, 80 },
                            PasswordSalt = new byte[] { 148, 100, 163, 91, 57, 107, 179, 59, 220, 18, 142, 136, 61, 3, 48, 149, 22, 153, 117, 164, 134, 202, 79, 222, 159, 240, 245, 123, 127, 34, 8, 87, 23, 27, 237, 73, 1, 194, 152, 104, 227, 141, 122, 37, 232, 251, 227, 122, 94, 142, 12, 63, 126, 75, 132, 25, 140, 208, 116, 255, 236, 189, 230, 239, 248, 176, 17, 226, 233, 231, 35, 95, 29, 83, 39, 244, 208, 117, 224, 212, 103, 13, 173, 23, 237, 112, 106, 12, 99, 188, 151, 52, 185, 217, 249, 241, 52, 195, 185, 60, 27, 53, 22, 253, 163, 215, 121, 131, 103, 138, 79, 34, 93, 25, 187, 32, 88, 203, 165, 8, 43, 254, 190, 37, 91, 112, 107, 115 },
                            dataNasc = new DateTime(2024, 4, 19, 20, 15, 52, 520, DateTimeKind.Local).AddTicks(1945),
                            email = "seuEmail@gmail.com",
                            nome = "UsuarioAdmin",
                            sobrenome = "",
                            tipoConta = "Organizador"
                        });
                });

            modelBuilder.Entity("BairroConnectAPI.Models.Municipe", b =>
                {
                    b.Property<int>("idMunicipe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idMunicipe"));

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("idPessoa")
                        .HasColumnType("int");

                    b.HasKey("idMunicipe");

                    b.HasIndex("idPessoa")
                        .IsUnique();

                    b.ToTable("TB_MUNICIPE", (string)null);
                });

            modelBuilder.Entity("BairroConnectAPI.Models.OrgEventos", b =>
                {
                    b.Property<int>("idOrganizador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idOrganizador"));

                    b.Property<string>("empresa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("idPessoa")
                        .HasColumnType("int");

                    b.Property<string>("profissao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telOrganizador")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("idOrganizador");

                    b.HasIndex("idPessoa")
                        .IsUnique();

                    b.ToTable("TB_ORGEVENTOS", (string)null);
                });

            modelBuilder.Entity("BairroConnectAPI.Models.Equipe", b =>
                {
                    b.HasOne("BairroConnectAPI.Models.Evento", null)
                        .WithOne()
                        .HasForeignKey("BairroConnectAPI.Models.Equipe", "idEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BairroConnectAPI.Models.Evento", b =>
                {
                    b.HasOne("BairroConnectAPI.Models.Categoria", null)
                        .WithOne()
                        .HasForeignKey("BairroConnectAPI.Models.Evento", "idCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BairroConnectAPI.Models.OrgEventos", null)
                        .WithOne()
                        .HasForeignKey("BairroConnectAPI.Models.Evento", "idOrganizador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BairroConnectAPI.Models.EventoComentario", b =>
                {
                    b.HasOne("BairroConnectAPI.Models.Evento", null)
                        .WithOne()
                        .HasForeignKey("BairroConnectAPI.Models.EventoComentario", "idEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BairroConnectAPI.Models.EventoEndereco", b =>
                {
                    b.HasOne("BairroConnectAPI.Models.Evento", null)
                        .WithOne()
                        .HasForeignKey("BairroConnectAPI.Models.EventoEndereco", "idEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BairroConnectAPI.Models.EventoParticipante", b =>
                {
                    b.HasOne("BairroConnectAPI.Models.Evento", null)
                        .WithOne()
                        .HasForeignKey("BairroConnectAPI.Models.EventoParticipante", "idEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BairroConnectAPI.Models.Municipe", b =>
                {
                    b.HasOne("BairroConnectAPI.Models.Logins", "logins")
                        .WithOne()
                        .HasForeignKey("BairroConnectAPI.Models.Municipe", "idPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("logins");
                });

            modelBuilder.Entity("BairroConnectAPI.Models.OrgEventos", b =>
                {
                    b.HasOne("BairroConnectAPI.Models.Logins", "logins")
                        .WithOne()
                        .HasForeignKey("BairroConnectAPI.Models.OrgEventos", "idPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("logins");
                });
#pragma warning restore 612, 618
        }
    }
}
